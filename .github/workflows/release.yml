name: Release

on:
  push:
    tags:
      - "v*.*.*"
jobs:
  pypi-publish:
    name: Publish to PYPI
    runs-on: ubuntu-latest
    environment:
      name: pro
      url: https://pypi.org/p/picomet
    if: github.repository == 'picomet/picomet'
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: python -m pip install setuptools wheel twine

      - name: Build distributions
        run: python setup.py sdist bdist_wheel

      - name: Test distributions
        run: twine check dist/*

      - name: Publish package to PyPI
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

  github-release:
    name: Create release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [pypi-publish]
    if: github.repository == 'picomet/picomet'
    steps:
      - uses: actions/checkout@v3
      - name: Get latest tag
        id: get-latest-tag
        run: |
          git fetch --tags --force
          latest_tag=$(git tag -l --sort=-version:refname | head -n 1)
          echo "latest-tag=$latest_tag" >> $GITHUB_OUTPUT
      - uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.get-latest-tag.outputs.latest-tag }}
          tag: ${{ steps.get-latest-tag.outputs.latest-tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
